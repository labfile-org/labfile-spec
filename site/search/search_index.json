{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Specification","text":"<p>Version: 1.0 Status: Draft for Public Comment Document Type: Specification Maintainer: Labfile Core Team URL: https://spec.labfile.bio</p>"},{"location":"#1-overview","title":"1. Overview","text":"<p>A <code>.labfile</code> is a structured YAML document that defines a scientific protocol in a way that is both human-readable and machine-verifiable. It serves as a universal, auditable representation of laboratory procedures \u2014 bridging human authorship, automated execution, and regulatory traceability.</p> <p>Each <code>.labfile</code> is:</p> <ul> <li>Declarative \u2014 describes what happens, not how code runs</li> <li>Versioned \u2014 the <code>LABFILE</code> header fixes the schema version</li> <li>Validated \u2014 syntax, semantics, and units are machine-checked</li> <li>Auditable \u2014 signed with a validator signature for immutability</li> <li>Extensible \u2014 supports external schemas under <code>extensions:</code></li> </ul>"},{"location":"#11-goals","title":"1.1 Goals","text":"Principle Description Reproducibility Explicit parameters and units ensure experiments can be reproduced exactly. Traceability Each file can link to its data, lineage, and validation record. Interoperability Compatible with automation and FAIR standards (Autoprotocol, SiLA 2, ISA-JSON, RO-Crate). Auditability Cryptographically signed validation metadata prevents silent edits. Human + Machine Symmetry Readable YAML for scientists, strict JSON model for systems."},{"location":"#12-design-philosophy","title":"1.2 Design Philosophy","text":"Principle Description Human First Scientists can author and read <code>.labfile</code> directly without programming. Machine Safe Every field has a defined type and unit, convertible to JSON Schema. FAIR-Aligned Built around Findable, Accessible, Interoperable, and Reusable data. Deterministic Identical input yields identical validated output \u2014 hash-stable. Extensible Extensions preserve forward-compatibility while isolating custom fields."},{"location":"#2-top-level-structure","title":"2. Top-Level Structure","text":"<p>Every <code>.labfile</code> follows this ordered layout:</p> Field Description LABFILE Specification version (must equal <code>\"1.0\"</code>). meta Metadata about authors, license, and project. materials List of reagents and consumables. devices Instruments or tools used in the protocol. steps Sequential procedural actions. expected_results Intended or observed outcomes. safety Biosafety and ethics information. attachments Related files, data, or analysis results. provenance Lineage and origin relationships. extensions Optional external namespaces. validation Automatically filled attestation block. validation_mode <code>\"strict\"</code> or <code>\"lenient\"</code> validation setting."},{"location":"#3-minimal-example","title":"3. Minimal Example","text":"<p>The example below demonstrates the modern <code>meta.authors[]</code> format and optional project website.</p> <pre><code>LABFILE: \"1.0\"\n\nmeta:\n  title: \"Example DNA Extraction\"\n  authors:\n    - name: \"Dr. Alice Smith\"\n      organization: \"Tropic Biology Lab\"\n      role: \"lead\"\n      website: \"https://tropicbio.example.org\"\n    - name: \"Dr. Keiko Yamamoto\"\n      organization: \"Tokyo Bioautomation Center\"\n      role: \"reviewer\"\n  lab: \"Tropic Biology Lab\"\n  website: \"https://labfile.bio/examples/dna-extraction\"\n  license: \"CC-BY-4.0\"\n  review_status: \"draft\"\n  visibility: \"public\"\n  FAIR_status: true\n  derived_from: [\"10.5281/zenodo.1234567\"]\n\nmaterials:\n  - id: m_buffer\n    name: \"Lysis buffer\"\n    purity: 99\n    concentration: 10\n  - id: m_sample\n    name: \"Blood sample\"\n\ndevices:\n  - id: d_centrifuge\n    name: \"Mini centrifuge\"\n    kind: \"centrifuge\"\n    model: \"Eppendorf 5418R\"\n    calibrated_at: \"2025-01-10\"\n\nsteps:\n  - id: s_1\n    action: \"add\"\n    with: [m_buffer, m_sample]\n    parameters:\n      volume: 1 mL\n\n  - id: s_2\n    action: \"centrifuge\"\n    use: [d_centrifuge]\n    parameters:\n      speed: 13000 rpm\n      duration: 5 min\n\nexpected_results:\n  description: \"Supernatant contains lysed DNA.\"\n  quantitative_metrics:\n    - name: \"DNA_yield\"\n      value: 20\n      unit: \"\u00b5g\"\n  method: \"Spectrophotometer\"\n\nsafety:\n  biosafety_level: \"BSL-1\"\n  ethics_approval_type: \"IRB\"\n  ethics_approval_id: \"IRB2025-01\"\n  ethics_approval_date: \"2025-02-01\"\n  notes: \"Wear gloves and protective eyewear.\"\n\nattachments:\n  - type: \"raw_data\"\n    format: \"csv\"\n    path: \"./results/dna_yield.csv\"\n    access_level: \"public\"\n    repository_url: \"https://zenodo.org/record/1234567\"\n    doi: \"10.5281/zenodo.1234567\"\n\nprovenance:\n  - relation_type: \"derived_from\"\n    source_type: \"labfile\"\n    doi: \"10.5281/zenodo.99999\"\n\nextensions:\n  my_custom_extension:\n    ontology: \"https://example.org/schema/biolab/v1\"\n\nvalidation:\n  validated_by: \"Labfile Validator 0.8.2\"\n  validated_at: \"2025-10-30T14:30:00Z\"\n  signature: \"sha256:acb123def...\"\n\nvalidation_mode: \"strict\"\n</code></pre>"},{"location":"#4-syntax-rules","title":"4. Syntax Rules","text":"<p>The <code>.labfile</code> syntax follows deterministic YAML 1.2, using a constrained subset to guarantee machine-safe parsing and reproducible hashing.</p>"},{"location":"#41-general-formatting","title":"4.1 General Formatting","text":"Rule Description Indentation Two spaces per level \u2014 tabs are invalid. Order Top-level keys must appear exactly in the order defined in \u00a72. Comments <code>#</code> comments allowed anywhere; ignored during validation. IDs All <code>id:</code> fields must be unique within a file. References Any reference in <code>with:</code> or <code>use:</code> must point to a declared ID. Units All quantitative values must include explicit units (see \u00a76.6). Qualitative terms Phrases like <code>\"room temperature\"</code> or <code>\"low speed\"</code> are invalid. Naming Field names use <code>snake_case</code>; enumerations are case-insensitive. Lists Empty lists (<code>[]</code>) are forbidden \u2014 omit the key instead. Unknown keys Any undeclared key outside <code>extensions:</code> triggers <code>E120: Unknown field</code>."},{"location":"#42-validation-modes","title":"4.2 Validation Modes","text":"Mode Behavior strict All required fields enforced; warnings treated as errors; validator signature required. lenient Allows missing optional metadata and out-of-range warnings; signature optional. <pre><code>validation_mode: \"strict\"\n</code></pre> <p>Validators, registries, and agents use this flag to decide whether the file must include a <code>validation:</code> block (\u00a76.12) and whether schema deviations block execution.</p>"},{"location":"#43-canonical-serialization","title":"4.3 Canonical Serialization","text":"<p>Before signing, the Labfile Validator:</p> <ol> <li>Normalizes indentation and field order.</li> <li>Removes all comments.</li> <li>Serializes deterministically to UTF-8 YAML (canonical form).</li> <li>Computes a SHA-256 hash of the canonical content excluding the <code>validation:</code> block.</li> </ol> <p>This guarantees that identical Labfiles always yield identical hashes, making signatures reproducible and long-term verifiable.</p>"},{"location":"#44-error-codes-excerpt","title":"4.4 Error Codes (excerpt)","text":"Code Meaning Typical Cause E001 Invalid LABFILE version Header not <code>\"1.0\"</code>. E120 Unknown field Key not in schema and not inside <code>extensions:</code>. E205 Missing unit Numeric value lacks unit. E310 Invalid reference <code>use:</code> or <code>with:</code> ID not found. E431 Custom device lacks capabilities <code>kind: \"custom\"</code> without <code>capabilities</code> in strict mode. E512 Invalid enumeration Value not in allowed enum. E590 Signature mismatch File changed post-validation."},{"location":"#5-field-summary","title":"5. Field Summary","text":"<p>Master table of all core sections and fields. Fields marked conditional become required under the stated conditions.</p> Section Field Type Required Units Allowed Types Constraints / Enum Example LABFILE <code>LABFILE</code> string \u2705 \u2014 string Must equal <code>\"1.0\"</code> <code>\"1.0\"</code> meta <code>title</code> string \u2705 \u2014 string Free text <code>\"DNA Extraction\"</code> <code>authors[]</code> list\\"},{"location":"#6-field-descriptions","title":"Specification","text":""},{"location":"#61-meta","title":"Specification","text":""},{"location":"#62-materials","title":"Specification","text":""},{"location":"#63-devices","title":"Specification","text":""},{"location":"#64-steps","title":"Specification","text":""},{"location":"#65-expected_results","title":"Specification","text":""},{"location":"#66-safety","title":"Specification","text":""},{"location":"#67-attachments","title":"Specification","text":""},{"location":"#68-provenance","title":"Specification","text":""},{"location":"#69-extensions","title":"Specification","text":""},{"location":"#610-validation-and-validation_mode","title":"Specification","text":""},{"location":"#611-validation_mode-behavior","title":"Specification","text":""},{"location":"#612-validation-metadata-and-attestation-logic","title":"Specification","text":""},{"location":"#7-behavioral-extensions","title":"Specification","text":""},{"location":"#71-repeat","title":"Specification","text":""},{"location":"#72-loop","title":"Specification","text":""},{"location":"#73-branch","title":"Specification","text":""},{"location":"#74-confirm","title":"Specification","text":""},{"location":"#75-execution-modes","title":"Specification","text":""},{"location":"#76-runtime-status-tracking","title":"Specification","text":""},{"location":"#8-validation-rules-and-integrity-model","title":"Specification","text":""},{"location":"#81-structural-rules","title":"Specification","text":""},{"location":"#82-identity-and-reference-rules","title":"Specification","text":""},{"location":"#83-quantitative-rules","title":"Specification","text":""},{"location":"#84-logical-rules","title":"Specification","text":""},{"location":"#85-validation-modes","title":"Specification","text":""},{"location":"#86-signature-integrity","title":"Specification","text":""},{"location":"#87-attestation-example","title":"Specification","text":""},{"location":"#88-registry-level-enforcement","title":"Specification","text":""},{"location":"#89-example-validation-error-report","title":"Specification","text":""},{"location":"#9-example-templates","title":"Specification","text":""},{"location":"#91-minimal-protocol","title":"Specification","text":""},{"location":"#92-advanced-research-protocol","title":"Specification","text":""},{"location":"#93-automated-robotic-workflow","title":"Specification","text":""},{"location":"#94-extended-template-with-custom-extension","title":"Specification","text":""}]}