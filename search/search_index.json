{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Specification","text":"<p>Version: 1.0 Status: Draft for Public Comment Document Type: Specification Maintainer: Labfile Core Team URL: https://spec.labfile.bio</p>"},{"location":"#1-overview","title":"1. Overview","text":"<p>A <code>.labfile</code> is a structured YAML document that defines a scientific protocol in a way that is both human-readable and machine-verifiable. It serves as a universal, auditable representation of laboratory procedures - bridging human authorship, automated execution, and regulatory traceability.</p> <p>Each <code>.labfile</code> is:</p> <ul> <li>Declarative - describes what happens, not how code runs</li> <li>Versioned - the <code>LABFILE</code> header fixes the schema version</li> <li>Validated - syntax, semantics, and units are machine-checked</li> <li>Auditable - signed with a validator signature for immutability</li> <li>Extensible - supports external schemas under <code>extensions:</code></li> </ul>"},{"location":"#11-goals","title":"1.1 Goals","text":"Principle Description Reproducibility Explicit parameters and units ensure experiments can be reproduced exactly. Traceability Each file can link to its data, lineage, and validation record. Interoperability Compatible with automation and FAIR standards (Autoprotocol, SiLA 2, ISA-JSON, RO-Crate). Auditability Cryptographically signed validation metadata prevents silent edits. Human + Machine Symmetry Readable YAML for scientists, strict JSON model for systems."},{"location":"#12-design-philosophy","title":"1.2 Design Philosophy","text":"Principle Description Human First Scientists can author and read <code>.labfile</code> directly without programming. Machine Safe Every field has a defined type and unit, convertible to JSON Schema. FAIR-Aligned Built around Findable, Accessible, Interoperable, and Reusable data. Deterministic Identical input yields identical validated output - hash-stable. Extensible Extensions preserve forward-compatibility while isolating custom fields."},{"location":"#2-top-level-structure","title":"2. Top-Level Structure","text":"<p>Every <code>.labfile</code> follows this ordered layout:</p> Field Description LABFILE Specification version (must equal <code>\"1.0\"</code>). meta Metadata about authors, license, and project. materials List of reagents and consumables. devices Instruments or tools used in the protocol. steps Sequential procedural actions. expected_results Intended or observed outcomes. safety Biosafety and ethics information. attachments Related files, data, or analysis results. provenance Lineage and origin relationships. extensions Optional external namespaces. validation Automatically filled attestation block. validation_mode <code>\"strict\"</code> or <code>\"lenient\"</code> validation setting."},{"location":"#3-minimal-example","title":"3. Minimal Example","text":"<p>The example below demonstrates the modern <code>meta.authors[]</code> format and optional project website.</p> <pre><code>LABFILE: \"1.0\"\n\nmeta:\n  title: \"Example DNA Extraction\"\n  authors:\n    - name: \"Dr. Alice Smith\"\n      organization: \"Tropic Biology Lab\"\n      role: \"lead\"\n      website: \"https://tropicbio.example.org\"\n    - name: \"Dr. Keiko Yamamoto\"\n      organization: \"Tokyo Bioautomation Center\"\n      role: \"reviewer\"\n  lab: \"Tropic Biology Lab\"\n  website: \"https://labfile.bio/examples/dna-extraction\"\n  license: \"CC-BY-4.0\"\n  review_status: \"draft\"\n  visibility: \"public\"\n  FAIR_status: true\n  derived_from: [\"10.5281/zenodo.1234567\"]\n\nmaterials:\n  - id: m_buffer\n    name: \"Lysis buffer\"\n    purity: 99\n    concentration: 10\n  - id: m_sample\n    name: \"Blood sample\"\n\ndevices:\n  - id: d_centrifuge\n    name: \"Mini centrifuge\"\n    kind: \"centrifuge\"\n    model: \"Eppendorf 5418R\"\n    calibrated_at: \"2025-01-10\"\n\nsteps:\n  - id: s_1\n    action: \"add\"\n    with: [m_buffer, m_sample]\n    parameters:\n      volume: 1 mL\n\n  - id: s_2\n    action: \"centrifuge\"\n    use: [d_centrifuge]\n    parameters:\n      speed: 13000 rpm\n      duration: 5 min\n\nexpected_results:\n  description: \"Supernatant contains lysed DNA.\"\n  quantitative_metrics:\n    - name: \"DNA_yield\"\n      value: 20\n      unit: \"\u00b5g\"\n  method: \"Spectrophotometer\"\n\nsafety:\n  biosafety_level: \"BSL-1\"\n  ethics_approval_type: \"IRB\"\n  ethics_approval_id: \"IRB2025-01\"\n  ethics_approval_date: \"2025-02-01\"\n  notes: \"Wear gloves and protective eyewear.\"\n\nattachments:\n  - type: \"raw_data\"\n    format: \"csv\"\n    path: \"./results/dna_yield.csv\"\n    access_level: \"public\"\n    repository_url: \"https://zenodo.org/record/1234567\"\n    doi: \"10.5281/zenodo.1234567\"\n\nprovenance:\n  - relation_type: \"derived_from\"\n    source_type: \"labfile\"\n    doi: \"10.5281/zenodo.99999\"\n\nextensions:\n  my_custom_extension:\n    ontology: \"https://example.org/schema/biolab/v1\"\n\nvalidation:\n  validated_by: \"Labfile Validator 0.8.2\"\n  validated_at: \"2025-10-30T14:30:00Z\"\n  signature: \"sha256:acb123def...\"\n\nvalidation_mode: \"strict\"\n</code></pre>"},{"location":"#4-syntax-rules","title":"4. Syntax Rules","text":"<p>The <code>.labfile</code> syntax follows deterministic YAML 1.2, using a constrained subset to guarantee machine-safe parsing and reproducible hashing.</p>"},{"location":"#41-general-formatting","title":"4.1 General Formatting","text":"Rule Description Indentation Two spaces per level - tabs are invalid. Order Top-level keys must appear exactly in the order defined in \u00a72. Comments <code>#</code> comments allowed anywhere; ignored during validation. IDs All <code>id:</code> fields must be unique within a file. References Any reference in <code>with:</code> or <code>use:</code> must point to a declared ID. Units All quantitative values must include explicit units (see \u00a76.6). Qualitative terms Phrases like <code>\"room temperature\"</code> or <code>\"low speed\"</code> are invalid. Naming Field names use <code>snake_case</code>; enumerations are case-insensitive. Lists Empty lists (<code>[]</code>) are forbidden - omit the key instead. Unknown keys Any undeclared key outside <code>extensions:</code> triggers <code>E120: Unknown field</code>."},{"location":"#42-validation-modes","title":"4.2 Validation Modes","text":"Mode Behavior strict All required fields enforced; warnings treated as errors; validator signature required. lenient Allows missing optional metadata and out-of-range warnings; signature optional. <pre><code>validation_mode: \"strict\"\n</code></pre> <p>Validators, registries, and agents use this flag to decide whether the file must include a <code>validation:</code> block (\u00a76.12) and whether schema deviations block execution.</p>"},{"location":"#43-canonical-serialization","title":"4.3 Canonical Serialization","text":"<p>Before signing, the Labfile Validator:</p> <ol> <li>Normalizes indentation and field order.</li> <li>Removes all comments.</li> <li>Serializes deterministically to UTF-8 YAML (canonical form).</li> <li>Computes a SHA-256 hash of the canonical content excluding the <code>validation:</code> block.</li> </ol> <p>This guarantees that identical Labfiles always yield identical hashes, making signatures reproducible and long-term verifiable.</p>"},{"location":"#44-error-codes-excerpt","title":"4.4 Error Codes (excerpt)","text":"Code Meaning Typical Cause E001 Invalid LABFILE version Header not <code>\"1.0\"</code>. E120 Unknown field Key not in schema and not inside <code>extensions:</code>. E205 Missing unit Numeric value lacks unit. E310 Invalid reference <code>use:</code> or <code>with:</code> ID not found. E431 Custom device lacks capabilities <code>kind: \"custom\"</code> without <code>capabilities</code> in strict mode. E512 Invalid enumeration Value not in allowed enum. E590 Signature mismatch File changed post-validation."},{"location":"#5-field-summary","title":"5. Field Summary","text":"<p>Master table of all core sections and fields. Fields marked conditional become required under the stated conditions.</p> Section Field Type Required Units Allowed Types Constraints / Enum Example LABFILE <code>LABFILE</code> string \u2705 - string Must equal <code>\"1.0\"</code> <code>\"1.0\"</code> meta <code>title</code> string \u2705 - string Free text <code>\"DNA Extraction\"</code> <code>authors[]</code> list\\"},{"location":"#6-field-descriptions","title":"Specification Overview","text":""},{"location":"#61-meta","title":"Specification Overview","text":""},{"location":"#62-materials","title":"Specification Overview","text":""},{"location":"#63-devices","title":"Specification Overview","text":""},{"location":"#64-steps","title":"Specification Overview","text":""},{"location":"#65-expected_results","title":"Specification Overview","text":""},{"location":"#66-safety","title":"Specification Overview","text":""},{"location":"#67-attachments","title":"Specification Overview","text":""},{"location":"#68-provenance","title":"Specification Overview","text":""},{"location":"#69-extensions","title":"Specification Overview","text":""},{"location":"#610-validation-and-validation_mode","title":"Specification Overview","text":""},{"location":"#611-validation_mode-behavior","title":"Specification Overview","text":""},{"location":"#612-validation-metadata-and-attestation-logic","title":"Specification Overview","text":""},{"location":"#7-behavioral-extensions","title":"Specification Overview","text":""},{"location":"#71-repeat","title":"Specification Overview","text":""},{"location":"#72-loop","title":"Specification Overview","text":""},{"location":"#73-branch","title":"Specification Overview","text":""},{"location":"#74-confirm","title":"Specification Overview","text":""},{"location":"#75-execution-modes","title":"Specification Overview","text":""},{"location":"#76-runtime-status-tracking","title":"Specification Overview","text":""},{"location":"#8-validation-rules-and-integrity-model","title":"Specification Overview","text":""},{"location":"#81-structural-rules","title":"Specification Overview","text":""},{"location":"#82-identity-and-reference-rules","title":"Specification Overview","text":""},{"location":"#83-quantitative-rules","title":"Specification Overview","text":""},{"location":"#84-logical-rules","title":"Specification Overview","text":""},{"location":"#85-validation-modes","title":"Specification Overview","text":""},{"location":"#86-signature-integrity","title":"Specification Overview","text":""},{"location":"#87-attestation-example","title":"Specification Overview","text":""},{"location":"#88-registry-level-enforcement","title":"Specification Overview","text":""},{"location":"#89-example-validation-error-report","title":"Specification Overview","text":""},{"location":"#9-example-templates","title":"Specification Overview","text":""},{"location":"#91-minimal-protocol","title":"Specification Overview","text":""},{"location":"#92-advanced-research-protocol","title":"Specification Overview","text":""},{"location":"#93-automated-robotic-workflow","title":"Specification Overview","text":""},{"location":"#94-extended-template-with-custom-extension","title":"Specification Overview","text":""},{"location":"labfile-sections/01-labfile-header/","title":"LABFILE Header","text":"<p>The <code>LABFILE</code> key is the fixed entry point for every specification-compliant file. It pins the schema version and signals validators that the document uses the Labfile contract.</p>"},{"location":"labfile-sections/01-labfile-header/#field-reference","title":"Field Reference","text":"Field Type Required Allowed Values Constraints Example <code>LABFILE</code> string \u2705 <code>\"1.0\"</code> Must be the first key in the document. <code>\"1.0\"</code>"},{"location":"labfile-sections/01-labfile-header/#purpose","title":"Purpose","text":"<ul> <li>Identify the document as a Labfile artifact.</li> <li>Lock the schema version so tooling knows which rules to apply.</li> <li>Anchor provenance and attestation metadata to a constant root value for hashing.</li> </ul>"},{"location":"labfile-sections/01-labfile-header/#requirements","title":"Requirements","text":"<ul> <li><code>LABFILE: \"1.0\"</code> must appear on the first non-comment line of the YAML file.</li> <li>The value is a quoted string; unquoted <code>1.0</code> or alternate schema numbers are invalid.</li> <li>Any mismatch triggers validation code <code>S101</code> and fatal error <code>E001</code>.</li> </ul>"},{"location":"labfile-sections/01-labfile-header/#validation-signals","title":"Validation Signals","text":"Code Description Trigger <code>S101</code> File must begin with <code>LABFILE: \"1.0\"</code> Header missing, misplaced, or incorrectly spelled. <code>E001</code> Invalid LABFILE version Header present but not equal to <code>\"1.0\"</code>."},{"location":"labfile-sections/01-labfile-header/#example","title":"Example","text":"<pre><code>LABFILE: \"1.0\"\n</code></pre>"},{"location":"labfile-sections/01-labfile-header/#best-practices","title":"Best Practices","text":"<ul> <li>Avoid blank lines, BOM markers, or comments before the header to preserve canonical hashing.</li> <li>When future schema versions are released, the validator will reject older tooling until it advertises support.</li> <li>Editors should template the header to prevent accidental typos during authoring.</li> </ul>"},{"location":"labfile-sections/01-labfile-header/#additional-reading","title":"Additional Reading","text":"<ul> <li>Top-Level Structure</li> <li>Field Summary</li> <li>Syntax Rules</li> </ul>"},{"location":"labfile-sections/02-meta/","title":"<code>meta</code>","text":"<p>The <code>meta</code> block captures descriptive information about the protocol: authorship, licensing, visibility, and how the work fits within wider registries.</p>"},{"location":"labfile-sections/02-meta/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>title</code> string \u2705 - string Free text <code>\"DNA Extraction\"</code> <code>authors[]</code> list\\"},{"location":"labfile-sections/02-meta/#how-to-use-each-field","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#authors-should-be-ordered-by-contribution-include-persistent-ids-where-possible-orcid-ror-grid","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#review_status-maps-to-your-governance-workflow","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#visibility-controls-publication-scope","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#fair_status-can-be-a-boolean-or-controlled-string-use-true-for-fully-compliant-protocols-or-provide-a-status-label-consumed-by-your-data-office","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#compliance-lists-regulatory-or-quality-frameworks-satisfied-by-the-protocol-glp-for-good-laboratory-practice-etc","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#derived_from-should-reference-persistent-identifiers-doi-accession-id-or-a-labfile-uri-so-provenance-can-be-resolved-automatically","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#best-practices","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#validation-notes","title":"meta.*","text":""},{"location":"labfile-sections/02-meta/#additional-reading","title":"meta.*","text":""},{"location":"labfile-sections/03-materials/","title":"<code>materials</code>","text":"<p>The <code>materials</code> array enumerates all consumables, reagents, and samples referenced throughout <code>steps</code>. Each entry becomes an addressable resource for procedural actions.</p>"},{"location":"labfile-sections/03-materials/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>id</code> string \u2705 - string Unique per file <code>\"m_buffer\"</code> <code>name</code> string \u2705 - string - <code>\"Lysis buffer\"</code> <code>purity</code> number optional % float 0\u2013100 <code>99</code> <code>concentration</code> number optional mM, \u00b5M, mg/mL, mol/L float \u22650 <code>10</code> <code>storage_temperature</code> number optional \u00b0C float \u2212196\u2013200 <code>-20</code> <code>hazards</code> list optional - array[string] Controlled vocabulary (<code>\"flammable\"</code>, \u2026) <code>[\"toxic\"]</code> <p>Additional metadata such as <code>lot</code>, <code>catalog_number</code>, <code>supplier</code>, <code>barcode</code>, <code>storage_conditions</code>, or <code>attachments</code> can be included for richer traceability even though they are not mandated by the core schema.</p>"},{"location":"labfile-sections/03-materials/#units-and-quantities","title":"Units and Quantities","text":"<ul> <li>Always pair numeric values with explicit units; omit qualitative words like <code>\"ambient\"</code>.</li> <li>When a property requires both magnitude and unit, use either:</li> <li>Separate numeric + unit keys (as shown for <code>concentration</code> + <code>concentration_unit</code> in the specification example), or</li> <li>Structured objects: <code>yaml     concentration:       value: 10       unit: \"mM\"</code></li> <li>Temperature limits should stay within the validator range (\u2212196 \u00b0C for liquid nitrogen to 200 \u00b0C for sterilization settings).</li> </ul>"},{"location":"labfile-sections/03-materials/#hazard-vocabulary","title":"Hazard Vocabulary","text":"<p>Use standardized terminology to improve cross-lab safety integrations. Suggested values include:</p> Hazard Tag Meaning / Example Source <code>\"flammable\"</code> Highly flammable; reference GHS H225 <code>\"toxic\"</code> Acute toxicity; cross-check supplier Safety Data Sheet (SDS). <code>\"corrosive\"</code> Causes severe skin burns; typically requires acid/base handling PPE. <code>\"biohazard\"</code> Infectious agents or biological waste. <code>\"oxidizer\"</code> Strong oxidizing agent; store separately from organics. <code>\"cryogenic\"</code> Extremely cold materials; mandates face shield and gloves."},{"location":"labfile-sections/03-materials/#best-practices","title":"Best Practices","text":"<ul> <li>Keep <code>id</code> values short, lowercase, and descriptive (<code>m_buffer</code>, <code>m_cells</code>). Mirror your LIMS or inventory system to ease integration.</li> <li>Capture supplier details (<code>supplier</code>, <code>catalog_number</code>, <code>lot</code>) even if optional; they simplify reordering and audits.</li> <li>Create dedicated attachments for certificates of analysis or SDS documents and cross-reference them from <code>attachments</code>.</li> <li>Use <code>hazards</code> and optional <code>safety_class</code>/<code>safety_notes</code> to align with institutional risk assessments.</li> </ul>"},{"location":"labfile-sections/03-materials/#validation-notes","title":"Validation Notes","text":"<ul> <li>Every ID referenced in <code>steps[].with</code> must already exist in <code>materials</code>; missing references trigger <code>R</code>-class integrity errors.</li> <li>Validators enforce numeric ranges (e.g., <code>purity</code> must fall within 0\u2013100). Out-of-range values raise <code>Q</code>-class quantitative errors.</li> <li>Units must be SI-derived or part of the validator\u2019s approved unit registry. Spell out prefixes (<code>\u00b5L</code>, <code>mg/mL</code>) exactly.</li> </ul>"},{"location":"labfile-sections/03-materials/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>materials</code> Field Details</li> <li>Validation Rules and Integrity Model</li> </ul>"},{"location":"labfile-sections/04-devices/","title":"<code>devices</code>","text":"<p>The <code>devices</code> block catalogs every instrument or tool invoked during the protocol. It drives automation compatibility and ensures calibration data is captured alongside procedure steps.</p>"},{"location":"labfile-sections/04-devices/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>id</code> string \u2705 - string Unique <code>\"d_centrifuge\"</code> <code>name</code> string \u2705 - string - <code>\"Mini centrifuge\"</code> <code>kind</code> string \u2705 - enum <code>centrifuge</code>, <code>pipette</code>, <code>thermal_cycler</code>, <code>spectrophotometer</code>, <code>incubator</code>, <code>balance</code>, <code>shaker</code>, <code>robotic_arm</code>, <code>freezer</code>, <code>microscope</code>, <code>biosafety_cabinet</code>, <code>autoclave</code>, <code>liquid_handler</code>, <code>plate_reader</code>, <code>flow_cytometer</code>, <code>custom</code> <code>\"centrifuge\"</code> <code>description</code> string conditional - string Required if <code>kind</code> = <code>\"custom\"</code> <code>\"Ultrasonic cleaner 40 kHz\"</code> <code>capabilities</code> map conditional - object Required if <code>kind: custom</code> &amp; <code>validation_mode: strict</code> <code>{ frequency: { unit: \"kHz\", min: 30, max: 45 } }</code> <code>manufacturer</code> string optional - string - <code>\"Eppendorf\"</code> <code>model</code> string optional - string - <code>\"5418R\"</code> <code>calibrated_at</code> date optional - ISO 8601 - <code>\"2025-01-10\"</code> <p>Optional additions such as <code>serial_number</code>, <code>location</code>, <code>maintenance_schedule</code>, <code>attachments</code>, or vendor-specific extension namespaces (<code>automation_ext</code>, <code>microscopy_ext</code>, etc.) can be used for richer integration.</p>"},{"location":"labfile-sections/04-devices/#kind-vocabulary","title":"<code>kind</code> Vocabulary","text":"Kind Description Typical Equipment Example <code>centrifuge</code> Spinning device for separating components by density. Eppendorf 5420 <code>pipette</code> Liquid handling tool for transferring defined volumes. Gilson PIPETMAN <code>thermal_cycler</code> PCR cycler controlling temperature cycles. Bio-Rad C1000 <code>spectrophotometer</code> Measures absorbance/transmittance across wavelengths. Thermo Scientific NanoDrop <code>incubator</code> Maintains temperature (and often humidity/CO\u2082) for cultures. Binder CB 160 <code>balance</code> Analytical or precision scale. METTLER TOLEDO XPR <code>shaker</code> Orbital/linear shaker or rocker platform. Eppendorf Innova 2100 <code>robotic_arm</code> Multi-axis arm for automation or sample handling. Universal Robots UR5e <code>freezer</code> Cold storage (\u221220 \u00b0C, \u221280 \u00b0C, cryogenic). Thermo TSX Series <code>microscope</code> Optical or fluorescence microscope. ZEISS LSM 900 <code>biosafety_cabinet</code> Containment enclosure for sterile/BSL operations. Labconco Purifier Logic+ <code>autoclave</code> Steam sterilizer for decontaminating equipment and media. Tuttnauer EZ9 <code>liquid_handler</code> Automated pipetting / deck platform. Tecan Fluent <code>plate_reader</code> Multi-well plate detection (absorbance, fluorescence, luminescence). Molecular Devices SpectraMax <code>flow_cytometer</code> Measures cell populations using lasers and detectors. BD FACSCelesta <code>custom</code> Any instrument not covered above; requires descriptive capabilities for validation. Custom-built imaging rig"},{"location":"labfile-sections/04-devices/#defining-capabilities-for-custom-devices","title":"Defining Capabilities for Custom Devices","text":"<ul> <li>Provide quantitative ranges with units (<code>frequency</code>, <code>volume_capacity</code>, <code>temperature_range</code>, etc.).</li> <li>Use arrays of strings for discrete functions (<code>functions: [\"wash\", \"sterilize\"]</code>).</li> <li>Include maintenance metadata when performance drifts over time (e.g., <code>last_service</code>, <code>calibration_certificate</code> via <code>attachments</code>).</li> </ul>"},{"location":"labfile-sections/04-devices/#best-practices","title":"Best Practices","text":"<ul> <li>Ensure <code>id</code> matches what appears in <code>steps[].use</code> and avoid spaces or uppercase letters (<code>d_incubator_a</code>).</li> <li>Record <code>calibrated_at</code> in ISO 8601 (<code>2025-01-10</code>); pair with <code>attachments</code> referencing calibration certificates.</li> <li>Document device placement (<code>location: \"Room B, Bench 3\"</code>) so technicians know which hardware matches the identifier.</li> <li>When multiple devices share a <code>kind</code>, use descriptive <code>name</code> patterns and include <code>serial_number</code> or <code>asset_tag</code>.</li> <li>Offload complex vendor schemas into <code>extensions</code> to keep the core section manageable.</li> </ul>"},{"location":"labfile-sections/04-devices/#validation-notes","title":"Validation Notes","text":"<ul> <li>Validators enforce the controlled <code>kind</code> vocabulary; unknown terms raise schema errors.</li> <li>In <code>strict</code> mode, custom devices must declare <code>capabilities</code> to describe measurable performance envelopes.</li> <li>Cross-references ensure every <code>use</code> value in <code>steps</code> maps to a declared <code>devices.id</code>, preventing orphan references.</li> </ul>"},{"location":"labfile-sections/04-devices/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>devices</code> Field Details</li> <li>Behavioral Extensions</li> </ul>"},{"location":"labfile-sections/05-steps/","title":"<code>steps</code>","text":"<p>The <code>steps</code> array defines the ordered procedural actions of the protocol. Each item captures intent (<code>action</code>), resources (<code>with</code> or <code>use</code>), parameters, and optional control flow directives.</p>"},{"location":"labfile-sections/05-steps/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>id</code> string \u2705 - string Unique <code>\"s_1\"</code> <code>action</code> string \u2705 - string Controlled action term (e.g., <code>add</code>, <code>incubate</code>, <code>centrifuge</code>) <code>\"centrifuge\"</code> <code>with</code> list optional - array[string] Material IDs defined in <code>materials[]</code> <code>[\"m_buffer\"]</code> <code>use</code> list optional - array[string] Device IDs defined in <code>devices[]</code> <code>[\"d_centrifuge\"]</code> <code>parameters</code> map optional - map Quantitative; units required <code>{ speed: 13000 rpm }</code> <code>execution_mode</code> string optional - enum <code>manual</code>, <code>automated</code>, <code>hybrid</code> <code>\"manual\"</code> <code>runtime.status</code> string optional - enum <code>pending</code>, <code>running</code>, <code>completed</code>, <code>failed</code>, <code>skipped</code>, <code>aborted</code> <code>\"completed\"</code> <code>documentation_level</code> string optional - enum <code>standard</code>, <code>verbose</code>, <code>audit</code> <code>\"standard\"</code> <code>confirm</code> map optional - object Manual checkpoint <code>{ required: true, message: \"Check clarity\" }</code> <code>repeat</code> map optional - object Loop repetition <code>{ count: 3, interval: 5 min }</code> <code>loop</code> map optional - object While-condition <code>{ condition: { variable: \"OD600\", operator: \"&lt;\", value: 0.5 } }</code> <code>branch</code> map optional - object Conditional branch <code>{ condition: {...}, then: \"s_5\", else: \"s_6\" }</code>"},{"location":"labfile-sections/05-steps/#parameter-guidelines","title":"Parameter Guidelines","text":"<p>Quantitative parameters must include units (especially in <code>strict</code> mode). Common keys drawn from the specification:</p> Key Type Units (examples) Valid Range / Guidance Example <code>volume</code> number mL, \u00b5L 0.1\u20131000 (context dependent) <code>\"1 mL\"</code> <code>time</code> number s, min, h \u22650 <code>\"30 min\"</code> <code>duration</code> number s, min, h \u22650 <code>\"5 min\"</code> <code>temperature</code> number \u00b0C \u221280\u2013150 <code>\"37 \u00b0C\"</code> <code>speed</code> number rpm 100\u201330000 <code>\"13000 rpm\"</code> <code>angle</code> number \u00b0 0\u2013360 <code>45</code> <code>pressure</code> number bar, psi \u22650 <code>\"1 bar\"</code> <code>concentration</code> number mol/L, mg/mL \u22650 <code>\"5 mM\"</code> <code>mass</code> number g, mg \u22650 <code>\"1.2 g\"</code> <code>repetitions</code> integer - 1\u20131000 <code>3</code> <code>wavelength</code> number nm 180\u20131100 <code>405</code> <code>humidity</code> number % 0\u2013100 <code>60</code> <code>pH</code> number - 0\u201314 <code>7.4</code> <code>flow_rate</code> number \u00b5L/min, mL/min \u22650 <code>\"500 \u00b5L/min\"</code> <code>mix_speed</code> number rpm 0\u20132000 <code>\"800 rpm\"</code> <code>distance</code> number mm, cm \u22650 <code>\"5 mm\"</code>"},{"location":"labfile-sections/05-steps/#control-blocks","title":"Control Blocks","text":"Field Required Keys Behavior <code>confirm</code> <code>required</code>, <code>message</code>, optional <code>by</code> Inserts a manual checkpoint; execution pauses until the operator acknowledges. <code>repeat</code> <code>count</code>, optional <code>interval</code>, extras Executes the same step a fixed number of times with optional wait intervals. <code>loop</code> <code>condition</code>, <code>check_interval</code>, <code>max_duration</code> Continues while a logical condition remains true. Requires explicit exit safeguards. <code>branch</code> <code>condition</code>, <code>then</code>, <code>else</code> Directs control flow to another step ID depending on a condition outcome. <p>Define conditions using measurable variables (<code>variable</code>, <code>operator</code>, <code>value</code>). Qualitative statements (\u201cuntil done\u201d) are rejected.</p>"},{"location":"labfile-sections/05-steps/#execution-metadata","title":"Execution Metadata","text":"<ul> <li><code>execution_mode</code> communicates whether automation or manual operation is expected.   Use <code>hybrid</code> for human-in-the-loop robotics.</li> <li><code>runtime.status</code> captures live execution states for digital twins, dashboards, or audit logs.</li> <li><code>documentation_level</code> can increase verbosity of machine-generated reports (<code>audit</code> for regulated studies).</li> </ul>"},{"location":"labfile-sections/05-steps/#best-practices","title":"Best Practices","text":"<ul> <li>Keep IDs stable and descriptive; prefix steps by phase (<code>prep_1</code>, <code>run_2</code>).</li> <li>Group related operations with dedicated notes or attachments for SOP references.</li> <li>Avoid hidden dependencies-reference every material/device explicitly via <code>with</code>/<code>use</code>.</li> <li>Parameter units should be canonical (SI). If devices operate in alternative units, provide conversions in <code>notes</code>.</li> <li>Use <code>branch</code> sparingly; when complex logic is required consider splitting into multiple Labfiles with explicit transitions.</li> </ul>"},{"location":"labfile-sections/05-steps/#validation-notes","title":"Validation Notes","text":"<ul> <li>Controlled vocabularies for <code>action</code> are enforced by the validator\u2019s ontology; invalid verbs raise semantic errors (<code>Axxx</code> codes).</li> <li>Strict mode requires all numeric parameters to carry units; missing units raise <code>Q</code>-class errors.</li> <li>Control blocks must define exit conditions; otherwise deterministic validation fails.</li> <li>Cross-references ensure every <code>with</code>/<code>use</code> item exists, preventing orphaned resources.</li> </ul>"},{"location":"labfile-sections/05-steps/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>steps</code> Field Details</li> <li>Behavioral Extensions</li> </ul>"},{"location":"labfile-sections/06-expected-results/","title":"<code>expected_results</code>","text":"<p>The <code>expected_results</code> section documents the outcomes that should follow a successful execution-qualitative descriptions and quantitative metrics that support experiment verification.</p>"},{"location":"labfile-sections/06-expected-results/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>description</code> string \u2705 - string Outcome summary <code>\"Supernatant contains lysed DNA.\"</code> <code>quantitative_metrics[]</code> list\\"},{"location":"labfile-sections/06-expected-results/#metric-structure","title":"results.*","text":""},{"location":"labfile-sections/06-expected-results/#confidence-levels","title":"results.*","text":""},{"location":"labfile-sections/06-expected-results/#best-practices","title":"results.*","text":""},{"location":"labfile-sections/06-expected-results/#validation-notes","title":"results.*","text":""},{"location":"labfile-sections/06-expected-results/#additional-reading","title":"results.*","text":""},{"location":"labfile-sections/07-safety/","title":"<code>safety</code>","text":"<p>The <code>safety</code> block centralizes risk assessments, biosafety classifications, and mitigation measures required to run the protocol responsibly.</p>"},{"location":"labfile-sections/07-safety/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>biosafety_level</code> string optional - enum <code>BSL-1</code>, <code>BSL-2</code>, <code>BSL-3</code>, <code>BSL-4</code>, <code>non-applicable</code> <code>\"BSL-1\"</code> <code>ethics_approval_type</code> string optional - enum <code>IRB</code>, <code>IACUC</code>, <code>HREC</code>, <code>internal</code>, <code>none</code> <code>\"IRB\"</code> <code>ethics_approval_id</code> string optional - string Institutional approval identifier <code>\"IRB2025-01\"</code> <code>ethics_approval_date</code> date optional - ISO 8601 Approval date with <code>YYYY-MM-DD</code> format <code>\"2025-02-01\"</code> <code>notes</code> string optional - string Additional handling instructions <code>\"Handle reagents with gloves\"</code> <p>You may extend the section with arrays such as <code>controls[]</code>, <code>hazards[]</code>, <code>ppe[]</code>, or <code>references[]</code> if you want to link into a local safety management system or Standard Operating Procedures (SOPs).</p>"},{"location":"labfile-sections/07-safety/#enum-notes","title":"Enum Notes","text":"<ul> <li>Biosafety levels (BSL) indicate containment requirements:</li> <li><code>BSL-1</code> - routine teaching labs; minimal risk.</li> <li><code>BSL-2</code> - moderate risk organisms; requires biological safety cabinets.</li> <li><code>BSL-3</code> - high-risk airborne pathogens; controlled facility entry.</li> <li><code>BSL-4</code> - maximum containment for dangerous agents.</li> <li><code>non-applicable</code> - no biological agents involved.</li> <li>Ethics approval types map to governance bodies:</li> <li><code>IRB</code> (Institutional Review Board) - human subjects research.</li> <li><code>IACUC</code> - animal care and use committee.</li> <li><code>HREC</code> - human research ethics committee (common outside the US).</li> <li><code>internal</code> - company or lab-internal committee.</li> <li><code>none</code> - ethics approval not required (explain rationale in <code>notes</code>).</li> </ul>"},{"location":"labfile-sections/07-safety/#documentation-guidance","title":"Documentation Guidance","text":"<ul> <li>Record PPE expectations (<code>notes</code>, <code>ppe[]</code>) such as gloves, goggles, or respirators.</li> <li>Link to SOPs or emergency procedures using <code>references</code> objects (<code>{ id, title, url }</code>).</li> <li>Capture waste disposal guidance, spill response, or decontamination steps to satisfy institutional audits.</li> <li>When work spans multiple BSL zones, document location-specific requirements (<code>notes: \"Phase 1 in BSL-1, transfer to BSL-2\"</code>).</li> </ul>"},{"location":"labfile-sections/07-safety/#alignment-with-materials-and-devices","title":"Alignment with Materials and Devices","text":"<ul> <li>Cross-reference high-risk materials via <code>materials[].hazards</code> to keep messaging consistent.</li> <li>Tie in equipment dependencies (e.g., <code>biosafety_cabinet</code> IDs) describing where certain steps must be performed.</li> </ul>"},{"location":"labfile-sections/07-safety/#validation-notes","title":"Validation Notes","text":"<ul> <li>Enumerations are case-sensitive; deviations raise schema errors.</li> <li>Dates must be ISO 8601; missing or malformed entries trigger <code>S</code>-class syntax warnings.</li> <li>When used with <code>attachments</code>, ensure referenced SOP documents exist and match the declared access level.</li> </ul>"},{"location":"labfile-sections/07-safety/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>safety</code> Field Details</li> <li>Structural Rules</li> </ul>"},{"location":"labfile-sections/08-attachments/","title":"<code>attachments</code>","text":"<p>The <code>attachments</code> array links supplementary assets-raw data, analysis notebooks, calibration sheets-that contextualize the protocol.</p>"},{"location":"labfile-sections/08-attachments/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>type</code> string \u2705 - enum <code>raw_data</code>, <code>processed_data</code>, <code>report</code>, <code>image</code>, <code>log</code>, <code>archive</code>, <code>analysis_script</code> <code>\"raw_data\"</code> <code>format</code> string \u2705 - enum <code>csv</code>, <code>json</code>, <code>xlsx</code>, <code>yaml</code>, <code>xml</code>, <code>tiff</code>, <code>jpg</code>, <code>png</code>, <code>zip</code> <code>\"csv\"</code> <code>path</code> string \u2705 - string Local or relative file path <code>\"./results/dna_yield.csv\"</code> <code>repository_url</code> string optional - URL External dataset or repository link <code>\"https://zenodo.org/record/1234\"</code> <code>doi</code> string optional - string DOI string <code>\"10.5281/zenodo.1234\"</code> <code>access_level</code> string optional - enum <code>public</code>, <code>restricted</code>, <code>private</code>, <code>tokenized</code>, <code>paid</code> <code>\"public\"</code> <p>Additional optional keys commonly used:</p> <ul> <li><code>hash</code> / <code>hash_algorithm</code> for integrity checks (e.g., <code>sha256</code>).</li> <li><code>description</code> to provide short human-readable context.</li> <li><code>created_at</code> / <code>updated_at</code> for version tracking.</li> <li><code>mime_type</code> if you need exact media types beyond the <code>format</code> enum.</li> </ul>"},{"location":"labfile-sections/08-attachments/#enum-guidance","title":"Enum Guidance","text":"<ul> <li>Type communicates the role of the asset. For example, <code>analysis_script</code> might point to a Jupyter notebook stored alongside the protocol.</li> <li>Format reflects the underlying file encoding. If you need to support additional formats (<code>pdf</code>, <code>hdf5</code>), extend the validator\u2019s configuration or use an <code>extensions</code> namespace.</li> <li>Access level helps registries manage permissions:</li> <li><code>public</code> - no restrictions.</li> <li><code>restricted</code> - requires institutional login or NDA.</li> <li><code>private</code> - local-only, not exposed externally.</li> <li><code>tokenized</code> - presigned URLs or short-lived tokens.</li> <li><code>paid</code> - commercial access via paywall or licensing.</li> </ul>"},{"location":"labfile-sections/08-attachments/#linking-strategy","title":"Linking Strategy","text":"<ul> <li>Use relative <code>path</code> values when distributing the Labfile with a repository so consumers can fetch artifacts offline.</li> <li>Populate <code>repository_url</code> with stable landing pages (Zenodo, Figshare, Dryad). Prefer versioned DOIs for immutable references.</li> <li>Mirror important metadata (checksum, size, version) in <code>attachments</code> even if already present in external repositories to simplify offline verification.</li> </ul>"},{"location":"labfile-sections/08-attachments/#best-practices","title":"Best Practices","text":"<ul> <li>Attach calibration certificates for devices, raw instrument exports, and statistical analysis outputs.</li> <li>Pair attachments with <code>expected_results</code> metrics by noting filenames or DOIs in <code>notes</code>.</li> <li>For sensitive data, set <code>access_level: restricted</code> and provide retrieval instructions in <code>description</code>.</li> <li>Consider compressing large raw datasets (<code>zip</code>, <code>tar.gz</code>) and documenting the compression method.</li> </ul>"},{"location":"labfile-sections/08-attachments/#validation-notes","title":"Validation Notes","text":"<ul> <li>Validators check RFC 3986 compliance for <code>repository_url</code> and <code>doi</code> formatting.</li> <li>Missing <code>type</code> or <code>format</code> triggers error <code>E312</code> (attachment metadata incomplete).</li> <li>When <code>access_level</code> is not <code>public</code>, ensure usage instructions exist in <code>description</code> or <code>notes</code> to avoid review delays.</li> </ul>"},{"location":"labfile-sections/08-attachments/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>attachments</code> Field Details</li> <li>Provenance Requirements</li> </ul>"},{"location":"labfile-sections/09-provenance/","title":"<code>provenance</code>","text":"<p>The <code>provenance</code> section captures lineage-how this protocol relates to prior experiments, datasets, or registry entries. It is essential for reproducibility and regulatory traceability.</p>"},{"location":"labfile-sections/09-provenance/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>relation_type</code> string optional - enum <code>derived_from</code>, <code>variant_of</code>, <code>supersedes</code> <code>\"derived_from\"</code> <code>source_type</code> string optional - enum <code>labfile</code>, <code>dataset</code>, <code>publication</code>, <code>instrument</code>, <code>repository</code>, <code>external_db</code> <code>\"labfile\"</code> <code>doi</code> string optional - string DOI or other persistent identifier <code>\"10.5281/zenodo.99999\"</code> <p>Each provenance record is an object. You can extend entries with additional keys such as <code>title</code>, <code>version</code>, <code>access_url</code>, <code>commit</code>, <code>timestamp</code>, or <code>license</code> to express more context.</p>"},{"location":"labfile-sections/09-provenance/#relationship-types","title":"Relationship Types","text":"<ul> <li><code>derived_from</code> - The protocol is a transformation or downstream analysis of the referenced asset (e.g., deriving a derivative dataset).</li> <li><code>variant_of</code> - Minor modifications; the core procedure remains similar with slight adjustments.</li> <li><code>supersedes</code> - The current Labfile officially replaces the referenced protocol; registries may mark older versions deprecated.</li> </ul>"},{"location":"labfile-sections/09-provenance/#source-types","title":"Source Types","text":"<ul> <li><code>labfile</code> - Another Labfile ID or URL (<code>labfile://</code>, HTTPS).</li> <li><code>dataset</code> - Data packages deposited in repositories (Zenodo, Dryad).</li> <li><code>publication</code> - Journals, preprints, or SOP manuals.</li> <li><code>instrument</code> - Device calibration or configuration source.</li> <li><code>repository</code> - Git or version-control repositories.</li> <li><code>external_db</code> - LIMS, ELN, or regulatory databases.</li> </ul>"},{"location":"labfile-sections/09-provenance/#example","title":"Example","text":"<pre><code>provenance:\n  - relation_type: \"derived_from\"\n    source_type: \"dataset\"\n    doi: \"10.5281/zenodo.98765\"\n    title: \"RNA-Seq baseline data\"\n  - relation_type: \"supersedes\"\n    source_type: \"labfile\"\n    doi: \"10.5281/zenodo.87654\"\n    notes: \"Adds automated liquid handling support\"\n</code></pre>"},{"location":"labfile-sections/09-provenance/#best-practices","title":"Best Practices","text":"<ul> <li>Use persistent identifiers (DOI, Handle, accession numbers). For Git repositories reference commit SHAs: <code>repository_url: \"https://github.com/labfile-org/example\"</code> + <code>commit: \"a1b2c3d4\"</code>.</li> <li>Keep the array ordered chronologically to simplify diff reviews.</li> <li>Mirror provenance entries in <code>attachments</code> when sharing related reports to close the traceability loop.</li> <li>Coordinate with <code>extensions</code> if domain-specific lineage metadata is required (e.g., <code>clinical_ext.study_id</code>).</li> </ul>"},{"location":"labfile-sections/09-provenance/#validation-notes","title":"Validation Notes","text":"<ul> <li>Validators enforce enumerated <code>relation_type</code> and <code>source_type</code> lists; unexpected values raise schema errors.</li> <li>DOIs must comply with standard syntax (<code>10.</code> prefix). Non-DOI identifiers should include a URI scheme.</li> <li>Missing references or unreachable IDs may trigger reference integrity (<code>R</code> class) warnings during registry ingestion.</li> </ul>"},{"location":"labfile-sections/09-provenance/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>provenance</code> Field Details</li> <li>Identity and Reference Rules</li> </ul>"},{"location":"labfile-sections/10-extensions/","title":"<code>extensions</code>","text":"<p>The <code>extensions</code> object is a namespaced escape hatch for community- or vendor-specific fields that do not belong in the core schema.</p>"},{"location":"labfile-sections/10-extensions/#field-reference","title":"Field Reference","text":"Field (namespace) Type Required Units Allowed Types Constraints / Enum Example <code>_namespace_</code> map optional - any Custom namespaced fields per owner <code>{ microscopy_ext: {...} }</code> <p>Each top-level key represents a namespace that you control. Names must be lowercase with underscores to avoid collisions (e.g., <code>microscopy_ext</code>, <code>automation_ext</code>).</p>"},{"location":"labfile-sections/10-extensions/#namespace-structure","title":"Namespace Structure","text":"<pre><code>extensions:\n  microscopy_ext:\n    $schema: \"https://schemas.labfile.bio/ext/microscopy/v1\"\n    objective: \"40x oil\"\n    fluorescence_filter: \"FITC\"\n    exposure_time:\n      value: 120\n      unit: \"ms\"\n</code></pre> <p>Recommended metadata for every namespace:</p> <ul> <li><code>$schema</code> or <code>ontology</code> - URL to a JSON Schema / OpenAPI / LinkML document describing the shape.</li> <li><code>version</code> - semantic version of the extension payload (<code>\"1.2.0\"</code>).</li> <li><code>provider</code> - organization maintaining the namespace.</li> <li>Domain-specific payload - any fields that your tooling understands.</li> </ul>"},{"location":"labfile-sections/10-extensions/#best-practices","title":"Best Practices","text":"<ul> <li>Isolation: Keep namespace keys unique to your organization or consortium (<code>labname_feature_ext</code>). Never overload core field names.</li> <li>Documentation: Publish schemas and changelogs where validators can retrieve them. Versioned URLs help with deprecation management.</li> <li>Validation: If extensions impact robotic execution, attach signature metadata inside the namespace or in <code>validation.notes</code>.</li> <li>Discoverability: Reference extensions in <code>attachments</code> or knowledge bases so collaborators know where to find schema docs.</li> <li>Interoperability: Include fallback summaries for humans (<code>description</code>, <code>notes</code>) when the consumer lacks the custom validator.</li> </ul>"},{"location":"labfile-sections/10-extensions/#validation-notes","title":"Validation Notes","text":"<ul> <li>Core validators ensure namespaces do not collide with reserved keys but treat payloads as opaque by default.</li> <li>Registries may choose to fetch <code>$schema</code> and perform additional checks; plan for network failures by keeping critical fields simple.</li> <li>Keep payload sizes reasonable; large binary data should remain in <code>attachments</code>.</li> </ul>"},{"location":"labfile-sections/10-extensions/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>extensions</code> Field Details</li> <li>Extended Template Example</li> </ul>"},{"location":"labfile-sections/11-validation/","title":"<code>validation</code>","text":"<p>The <code>validation</code> block records the attestation emitted by authorized validators once a Labfile passes structural and semantic checks. It is generated automatically; authors should not edit it manually.</p>"},{"location":"labfile-sections/11-validation/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>validated_by</code> string conditional - string Required if <code>validation_mode: strict</code> <code>\"Labfile Validator 0.8.2\"</code> <code>validated_at</code> date-time conditional - ISO 8601 Required if <code>validation_mode: strict</code> <code>\"2025-10-30T14:30:00Z\"</code> <code>signature</code> string conditional - string <code>sha256:&lt;hex&gt;</code> over canonical YAML (excluding <code>validation:</code>) <code>\"sha256:acb123def...\"</code> <p>Optional keys frequently emitted by validators:</p> <ul> <li><code>notes</code> - free-form comments about the validation profile.</li> <li><code>profile</code> - identifier for the ruleset used (e.g., <code>\"strict-lims-v1\"</code>).</li> <li><code>public_key</code> / <code>certificate</code> - materials required for signature verification.</li> <li><code>report</code> - relative path to a detailed validation log stored under <code>attachments</code>.</li> </ul>"},{"location":"labfile-sections/11-validation/#example","title":"Example","text":"<pre><code>validation:\n  validated_by: \"Labfile Validator 0.8.2\"\n  validated_at: \"2025-10-30T14:30:00Z\"\n  signature: \"sha256:acb123def...\"\n</code></pre>"},{"location":"labfile-sections/11-validation/#integrity-chain","title":"Integrity Chain","text":"Proof Field Function Validator identity <code>validated_by</code> Identifies tool and version used. Timestamp <code>validated_at</code> Confirms validation date (UTC). Cryptographic checksum <code>signature</code> Detects any downstream tampering."},{"location":"labfile-sections/11-validation/#best-practices","title":"Best Practices","text":"<ul> <li>Treat the block as append-only: any edit to the Labfile invalidates the signature and requires regeneration.</li> <li>Preserve validator public keys in a central registry to allow independent verification.</li> <li>When multiple validators run (e.g., internal QA plus registry), store additional attestations under <code>attachments</code> or extension namespaces rather than overwriting the core block.</li> <li>Include validation reports (PDF/JSON) as attachments for audit trails, referencing them in <code>validation.notes</code>.</li> </ul>"},{"location":"labfile-sections/11-validation/#validation-notes","title":"Validation Notes","text":"<ul> <li>Validators should refuse to sign if existing attestation data is out of sync with the file hash.</li> <li>The signature uses canonical serialization rules defined in the spec; whitespace or key-order differences are normalized before hashing.</li> <li>In <code>lenient</code> mode, validators may omit the block entirely or leave fields empty, but registries typically require full data before accepting public submissions.</li> </ul>"},{"location":"labfile-sections/11-validation/#additional-reading","title":"Additional Reading","text":"<ul> <li><code>validation</code> Field Details</li> <li>Attestation Logic</li> </ul>"},{"location":"labfile-sections/12-validation-mode/","title":"<code>validation_mode</code>","text":"<p><code>validation_mode</code> reflects the intent behind the validator run-whether strict schema enforcement is required or leniency is allowed for exploratory work.</p>"},{"location":"labfile-sections/12-validation-mode/#field-reference","title":"Field Reference","text":"Field Type Required Units Allowed Types Constraints / Enum Example <code>validation_mode</code> string optional - enum <code>strict</code>, <code>lenient</code> <code>\"strict\"</code>"},{"location":"labfile-sections/12-validation-mode/#mode-semantics","title":"Mode Semantics","text":"Mode Characteristics Impact on <code>validation</code> block <code>strict</code> All schema, semantic, and ontology rules enforced; numeric parameters must include units. <code>validated_by</code>, <code>validated_at</code>, and <code>signature</code> required. <code>lenient</code> Noncritical warnings permitted; validators may skip signature generation; useful for drafts. Attestation fields optional; warnings logged for reviewers."},{"location":"labfile-sections/12-validation-mode/#when-to-use-each-mode","title":"When to Use Each Mode","text":"<ul> <li>Production release / registry submission: use <code>strict</code> to guarantee reproducibility and integrity checks.</li> <li>Internal experimentation, collaborative drafting, or schema prototyping: temporarily use <code>lenient</code>. Convert back to <code>strict</code> before public dissemination.</li> <li>Automation gating: robotics pipelines can read <code>validation_mode</code> to decide whether to block execution on warnings.</li> </ul>"},{"location":"labfile-sections/12-validation-mode/#governance-tips","title":"Governance Tips","text":"<ul> <li>Log the reason for switching modes in <code>validation.notes</code> or commit messages to preserve an audit trail.</li> <li>Pair mode transitions with version tags (e.g., <code>v1.0.0-draft</code> vs <code>v1.0.0</code>) so consumers know whether to trust the signature.</li> <li>If a registry overrides the declared mode (e.g., enforcing <code>strict</code>), record the override decision in <code>validation.notes</code> or an <code>extensions</code> namespace.</li> </ul>"},{"location":"labfile-sections/12-validation-mode/#validation-notes","title":"Validation Notes","text":"<ul> <li>Mode must always be declared, even if the validator default is stricter; absent values are treated as <code>strict</code> by most tooling.</li> <li>Changing any part of the Labfile after validation requires rerunning the validator, regardless of mode.</li> <li>Validators may emit warning codes (<code>Wxxx</code>) in lenient mode; treat them as actionable TODOs before promoting to <code>strict</code>.</li> </ul>"},{"location":"labfile-sections/12-validation-mode/#additional-reading","title":"Additional Reading","text":"<ul> <li>Validation Modes</li> <li><code>validation</code> Field Details</li> </ul>"}]}